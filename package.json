{
  "name": "@folio/finc-config",
  "version": "1.0.0",
  "description": "Index configuration of finc catalogues",
  "main": "src/index.js",
  "repository": "",
  "license": "Apache-2.0",
  "engines": {
    "node": ">=6.0.0"
  },
  "scripts": {
    "start": "stripes serve",
    "build": "stripes build --output ./output",
    "test-int": "stripes test nightmare --run demo --show",
    "test": "stripes test karma",
    "lint": "eslint ."
  },
  "devDependencies": {
    "@bigtest/interactor": "^0.8.1",
    "@bigtest/mirage": "^0.0.1",
    "@bigtest/mocha": "^0.5.1",
    "@bigtest/react": "^0.1.2",
    "@folio/eslint-config-stripes": "^3.2.1",
    "@folio/stripes": "^1.0.0",
    "@folio/stripes-cli": "1.7.0",
    "@folio/stripes-core": "^2.15.1",
    "babel-eslint": "^9.0.0",
    "babel-polyfill": "^6.26.0",
    "chai": "^4.2.0",
    "eslint": "^5.6.0",
    "mocha": "^5.2.0",
    "react": "^16.4.1",
    "react-dom": "^16.4.1",
    "react-redux": "^5.0.7",
    "redux": "^4.0.0",
    "sinon": "^6.3.4"
  },
  "dependencies": {
    "lodash": "^4.17.11",
    "prop-types": "^15.6.0",
    "react-intl": "^2.4.0",
    "react-router-dom": "^4.1.1",
    "redux-form": "^7.4.2"
  },
  "peerDependencies": {
    "@folio/stripes": "^1.0.0",
    "react": "*"
  },
  "stripes": {
    "type": "app",
    "displayName": "ui-finc-config.meta.title",
    "route": "/fincconfig",
    "home": "/fincconfig",
    "hasSettings": true,
    "queryResource": "query",
    "okapiInterfaces": {
      "metadata-sources": "1.0",
      "metadata-collections": "1.0",
      "vendor": "1.0"
    },
    "permissionSets": [
      {
        "permissionName": "module.finc-config.enabled",
        "displayName": "UI: Finc Config module is enabled",
        "visible": true
      },
      {
        "permissionName": "settings.finc-config.enabled",
        "displayName": "Settings (finc-config): display list of settings pages",
        "subPermissions": [
          "settings.enabled"
        ],
        "visible": true
      },
      {
        "permissionName": "metadatasources.collection.get",
        "displayName": "metadatasources-collection get",
        "description": "Get collection of metadata sources"
      },
      {
        "permissionName": "metadatasources.item.post",
        "displayName": "metadatasources-item post",
        "description": "Create a new metadata sources"
      },
      {
        "permissionName": "metadatasources.item.get",
        "displayName": "metadata-sources-item get",
        "description": "Fetch a metadata sources"
      },
      {
        "permissionName": "metadatasources.item.put",
        "displayName": "metadata-sources-item put",
        "description": "Update a metadata sources"
      },
      {
        "permissionName": "metadatasources.item.delete",
        "displayName": "metadatasources-item delete",
        "description": "Delete a metadata sources"
      },
      {
        "permissionName": "metadatasources.all",
        "displayName": "All metadatasources perms",
        "description": "All permissions for the metadata sources",
        "subPermissions": [
          "metadatasources.collection.get",
          "metadatasources.item.post",
          "metadatasources.item.get",
          "metadatasources.item.put",
          "metadatasources.item.delete"
        ]
      },
      {
        "permissionName": "metadatacollections.collection.get",
        "displayName": "metadatacollections-collection get",
        "description": "Get collection of metadata collections"
      },
      {
        "permissionName": "metadatacollections.item.post",
        "displayName": "metadatacollections-item post",
        "description": "Create a new metadata collections"
      },
      {
        "permissionName": "metadatacollections.item.get",
        "displayName": "metadatacollections-item get",
        "description": "Fetch a metadata collections"
      },
      {
        "permissionName": "metadatacollections.item.put",
        "displayName": "metadatacollections-item put",
        "description": "Update a metadata collections"
      },
      {
        "permissionName": "metadatacollections.item.delete",
        "displayName": "metadatacollections-item delete",
        "description": "Delete a metadata collections"
      },
      {
        "permissionName": "metadatacollections.all",
        "displayName": "All metadatacollections perms",
        "description": "All permissions for the metadata collections",
        "subPermissions": [
          "metadatacollections.collection.get",
          "metadatacollections.item.post",
          "metadatacollections.item.get",
          "metadatacollections.item.put",
          "metadatacollections.item.delete"
        ]
      }
    ]
  }
}
